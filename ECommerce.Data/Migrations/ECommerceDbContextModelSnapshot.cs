// <auto-generated />
using System;
using ECommerce.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerce.Data.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    partial class ECommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommerce.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Quần bò nam",
                            SeoTitle = "Quần bò nam"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Áo sơ mi nam",
                            SeoTitle = "Áo sơ mi nam"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Giày cao gót",
                            SeoTitle = "Giay cao gót"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Giày thể thao nữ",
                            SeoTitle = "Giày thể thao nữ"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Phụ kiện",
                            SeoTitle = "Phụ kiện"
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("007897e8-c8d5-4045-a374-f1e713b9d349"),
                            CategoryId = 1,
                            Description = "Description",
                            Name = "Quần Jean nam cao cấp Hàn Quốc",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("73c40b20-3957-4cc3-b469-7bf8710da82e"),
                            CategoryId = 2,
                            Description = "Description",
                            Name = "Áo sơ mi cổ đức",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("f8cee4d8-0786-416d-96fe-3f082be58b2b"),
                            CategoryId = 3,
                            Description = "Description",
                            Name = "Guốc cao gót Quảng Châu",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("e8636a01-ca7c-4c7d-8f47-624fd31b5884"),
                            CategoryId = 4,
                            Description = "Description",
                            Name = "Giày thể thao Unisex",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("631ffa1e-9add-4f39-bb2b-8d2b23c872c9"),
                            CategoryId = 4,
                            Description = "Description",
                            Name = "Giày ",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("4ae4f1e4-f8a9-4686-9ae5-99636e3a9555"),
                            CategoryId = 1,
                            Description = "Description",
                            Name = "Quần baggy nam",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("0c64d061-eb9f-46cd-b764-784bd93f70d1"),
                            CategoryId = 2,
                            Description = "Description",
                            Name = "Áo sơ mi cúc bấm",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("4404ea65-0d55-41f7-9b59-7710e8dd5398"),
                            CategoryId = 3,
                            Description = "Description",
                            Name = "Guốc mũi nhọn",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("41b542aa-b862-43ab-9f0a-95aa18509bcd"),
                            CategoryId = 1,
                            Description = "Description",
                            Name = "Jean ống suông",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("abcde8bb-2d0c-467c-a7ba-885c9c13c52b"),
                            CategoryId = 5,
                            Description = "Description",
                            Name = "Đồng hồ nam cao cấp",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("3df19266-984c-4239-af67-32c79902bf88"),
                            CategoryId = 2,
                            Description = "Description",
                            Name = "Áo sơ mi họa tiết cáo",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        },
                        new
                        {
                            Id = new Guid("efff8436-5e87-4d1f-a433-6587bc15a630"),
                            CategoryId = 1,
                            Description = "Description",
                            Name = "Quần jean không gấu",
                            OriginalPrice = 2000000m,
                            Price = 1500000m,
                            SeoTitle = "SeoTile"
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Entities.ProductSupplier", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductSuppliers");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("007897e8-c8d5-4045-a374-f1e713b9d349"),
                            SupplierId = new Guid("191f2fa3-6090-4cd1-b455-e5bb9952fc56")
                        },
                        new
                        {
                            ProductId = new Guid("73c40b20-3957-4cc3-b469-7bf8710da82e"),
                            SupplierId = new Guid("9aa6fdb5-a28e-49e5-b3cc-2af2935c264c")
                        },
                        new
                        {
                            ProductId = new Guid("f8cee4d8-0786-416d-96fe-3f082be58b2b"),
                            SupplierId = new Guid("b6d16c71-4095-429a-a5d8-6c426ce1d89e")
                        },
                        new
                        {
                            ProductId = new Guid("e8636a01-ca7c-4c7d-8f47-624fd31b5884"),
                            SupplierId = new Guid("46daea1f-4cc9-4b8f-b5ac-8e868039fb42")
                        },
                        new
                        {
                            ProductId = new Guid("631ffa1e-9add-4f39-bb2b-8d2b23c872c9"),
                            SupplierId = new Guid("191f2fa3-6090-4cd1-b455-e5bb9952fc56")
                        },
                        new
                        {
                            ProductId = new Guid("4ae4f1e4-f8a9-4686-9ae5-99636e3a9555"),
                            SupplierId = new Guid("9aa6fdb5-a28e-49e5-b3cc-2af2935c264c")
                        },
                        new
                        {
                            ProductId = new Guid("0c64d061-eb9f-46cd-b764-784bd93f70d1"),
                            SupplierId = new Guid("191f2fa3-6090-4cd1-b455-e5bb9952fc56")
                        },
                        new
                        {
                            ProductId = new Guid("4404ea65-0d55-41f7-9b59-7710e8dd5398"),
                            SupplierId = new Guid("191f2fa3-6090-4cd1-b455-e5bb9952fc56")
                        },
                        new
                        {
                            ProductId = new Guid("41b542aa-b862-43ab-9f0a-95aa18509bcd"),
                            SupplierId = new Guid("9aa6fdb5-a28e-49e5-b3cc-2af2935c264c")
                        },
                        new
                        {
                            ProductId = new Guid("abcde8bb-2d0c-467c-a7ba-885c9c13c52b"),
                            SupplierId = new Guid("46daea1f-4cc9-4b8f-b5ac-8e868039fb42")
                        },
                        new
                        {
                            ProductId = new Guid("3df19266-984c-4239-af67-32c79902bf88"),
                            SupplierId = new Guid("9aa6fdb5-a28e-49e5-b3cc-2af2935c264c")
                        },
                        new
                        {
                            ProductId = new Guid("efff8436-5e87-4d1f-a433-6587bc15a630"),
                            SupplierId = new Guid("46daea1f-4cc9-4b8f-b5ac-8e868039fb42")
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("191f2fa3-6090-4cd1-b455-e5bb9952fc56"),
                            Address = "New York",
                            Name = "Adidas",
                            Phone = "0901534643"
                        },
                        new
                        {
                            Id = new Guid("9aa6fdb5-a28e-49e5-b3cc-2af2935c264c"),
                            Address = "New York",
                            Name = "Nike",
                            Phone = "0901534643"
                        },
                        new
                        {
                            Id = new Guid("b6d16c71-4095-429a-a5d8-6c426ce1d89e"),
                            Address = "New York",
                            Name = "Canifa",
                            Phone = "0901534643"
                        },
                        new
                        {
                            Id = new Guid("46daea1f-4cc9-4b8f-b5ac-8e868039fb42"),
                            Address = "Japan",
                            Name = "Uniquilo",
                            Phone = "0901534643"
                        });
                });

            modelBuilder.Entity("ECommerce.Data.Entities.Product", b =>
                {
                    b.HasOne("ECommerce.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.Data.Entities.ProductSupplier", b =>
                {
                    b.HasOne("ECommerce.Data.Entities.Product", "Product")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Data.Entities.Supplier", "Supplier")
                        .WithMany("ProductSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ECommerce.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Data.Entities.Product", b =>
                {
                    b.Navigation("ProductSuppliers");
                });

            modelBuilder.Entity("ECommerce.Data.Entities.Supplier", b =>
                {
                    b.Navigation("ProductSuppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
